** start of undefined **

<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="styles.css" type="text/css"/>
    <title>Technical Documentation Page</title>
    </head>
    <body>
      <nav id="navbar">
          <header>Js documentation</header>
          <a class="nav-link" href="#Introduction">Introduction</a>
          <a class="nav-link" href="#What_you_should_already_know">What you should already know</a>
          <a class="nav-link" href="#Java_Script_and_Java">Java Script and Java</a>
          <a class="nav-link" href="#Variables">Variables</a>
          <a class="nav-link" href="#Data_types">Data types</a>
        </nav>
      <main id="main-doc">
        <section class="main-section" id="Introduction">
          <header>Introduction</header>
          <code>console.log("Introduction")</code>
          <p>This guide assumes you have the following basic background:</p>
          <p>JavaScript is a cross-platform, object-oriented scripting language. It is a small and lightweight language. Inside a host environment (for example, a web browser), JavaScript can be connected to the objects of its environment to provide programmatic control over them.</p>
          <p>JavaScript contains a standard library of objects, such as Array, Date, and Math, and a core set of language elements such as operators, control structures, and statements. Core JavaScript can be extended for a variety of purposes by supplementing it with additional objects; for example:</p>
          <ul>
            <li>Client-side JavaScript extends the core language by supplying objects to control a browser and its Document Object Model (DOM). For example, client-side extensions allow an application to place elements on an HTML form and respond to user events such as mouse clicks, form input, and page navigation.</li>
            </ul>
        </section>
        <section class="main-section" id="What_you_should_already_know">
          <header>What you should already know</header>
          <code>Let's have some fun</code>
          <p>This guide assumes you have the following basic background:</p>
          <p>This guide assumes you have the following basic background:</p>
          <p>To get started with writing JavaScript, open the Scratchpad and write your first "Hello world" JavaScript code:</p>
          <ul>
            <li>A general understanding of the Internet and the World Wide Web (WWW).</li>
            </ul>
        </section>
        <section class="main-section" id="Java_Script_and_Java">
          <header>Java Script and Java</header>
          <code>let js = "Java Script"</code>
          <p>This guide assumes you have the following basic background:</p>
          <p>JavaScript and Java are similar in some ways but fundamentally different in some others. The JavaScript language resembles Java but does not have Java's static typing and strong type checking. JavaScript follows most Java expression syntax, naming conventions and basic control-flow constructs which was the reason why it was renamed from LiveScript to JavaScript.</p>
          <p>In contrast to Java's compile-time system of classes built by declarations, JavaScript supports a runtime system based on a small number of data types representing numeric, Boolean, and string values. JavaScript has a prototype-based object model instead of the more common class-based object model. The prototype-based model provides dynamic inheritance; that is, what is inherited can vary for individual objects. JavaScript also supports functions without any special declarative requirements. Functions can be properties of objects, executing as loosely typed methods.</p>
          <ul>
            <li>Don't mess with variables digga</li>
            </ul>
        </section>
        <section class="main-section" id="Variables">
          <header>Variables</header>
          <code>var = "variable"</code>
          <p>This guide assumes you have the following basic background:</p>
          <p>You use variables as symbolic names for values in your application. The names of variables, called identifiers, conform to certain rules.</p>
          <p>A JavaScript identifier must start with a letter, underscore (_), or dollar sign ($); subsequent characters can also be digits (0-9). Because JavaScript is case sensitive, letters include the characters "A" through "Z" (uppercase) and the characters "a" through "z" (lowercase).</p>
          <ul>
            <li>Don't mess with variables digga</li>
            </ul>
        </section>
        <section class="main-section" id="Data_types">
          <header>Data types</header>
          <code>Boolean, Int, string . . .</code>
          <p>This guide assumes you have the following basic background:</p>
          <p>The latest ECMAScript standard defines seven data types:</p>
          <p>Six data types that are primitives:</p>
          <ul>
            <li>Boolean. true and false.</li>
            </ul>
        </section>
        

        </main>
      </body>
  </html>

** end of undefined **

** start of undefined **

html,
body {
  min-width: 290px;
  color: #4d4e53;
  background-color: #ffffff;
  font-family: 'Open Sans', Arial, sans-serif;
  line-height: 1.5;
}

#navbar {
  position: fixed;
  min-width: 290px;
  top: 0px;
  left: 0px;
  width: 300px;
  height: 100%;
  border-right: solid;
  border-color: rgba(0, 22, 22, 0.4);
}

header {
  color: black;
  margin: 10px;
  text-align: center;
  font-size: 1.8em;
  font-weight: thin;
}

#main-doc header {
  text-align: left;
  margin: 0px;
}

#navbar ul {
  height: 88%;
  padding: 0;
  overflow-y: auto;
  overflow-x: hidden;
}

#navbar li {
  color: #4d4e53;
  border-top: 1px solid;
  list-style: none;
  position: relative;
  width: 100%;
}

#navbar a {
  display: block;
  padding: 10px 30px;
  color: #4d4e53;
  text-decoration: none;
  cursor: pointer;
}

#main-doc {
  position: absolute;
  margin-left: 310px;
  padding: 20px;
  margin-bottom: 110px;
}

section article {
  color: #4d4e53;
  margin: 15px;
  font-size: 0.96em;
}

section li {
  margin: 15px 0px 0px 20px;
}

code {
  display: block;
  text-align: left;
  white-space: pre-line;
  position: relative;
  word-break: normal;
  word-wrap: normal;
  line-height: 2;
  background-color: #f7f7f7;
  padding: 15px;
  margin: 10px;
  border-radius: 5px;
}

@media only screen and (max-width: 815px) {
  /* For mobile phones: */
  #navbar ul {
    border: 1px solid;
    height: 207px;
  }

  #navbar {
    background-color: white;
    position: absolute;
    top: 0;
    padding: 0;
    margin: 0;
    width: 100%;
    max-height: 275px;
    border: none;
    z-index: 1;
    border-bottom: 2px solid;
  }

  #main-doc {
    position: relative;
    margin-left: 0px;
    margin-top: 270px;
  }
}

@media only screen and (max-width: 400px) {
  #main-doc {
    margin-left: -10px;
  }

  code {
    margin-left: -20px;
    width: 100%;
    padding: 15px;
    padding-left: 10px;
    padding-right: 45px;
    min-width: 233px;
  }
}


** end of undefined **

